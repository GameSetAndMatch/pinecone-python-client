name: 'PyPI Release: Production (pinecone-client)'

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref to build (branch name or SHA)'
        required: true
        type: string
        default: 'main'
      releaseLevel:
        description: 'Release level'
        required: true
        type: choice
        default: 'patch'
        options:
          - 'patch' # bug fixes
          - 'minor' # new features, backwards compatible
          - 'major' # breaking changes

jobs:
  unit-tests:
    uses: './.github/workflows/testing-unit.yaml'
    secrets: inherit
  integration-tests-data:
      uses: './.github/workflows/testing-integration-data-plane.yaml'
      secrets: inherit
  integration-tests-pod:
    uses: './.github/workflows/testing-integration-control-plane-pod.yaml'
    strategy:
      max-parallel: 1
      matrix:
        environment:
          - 'us-east1-gcp'
        client-version: ['dev', '3.0.2']
    secrets:
      PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
    with:
      PINECONE_CONTROLLER_HOST: 'https://api.pinecone.io'
      additional-headers-json: '{}'
      environment: ${{ matrix.environment }}
      client-version: ${{ matrix.client-version}}
      dimension: 10
  integration-tests-serverless:
    uses: './.github/workflows/testing-integration-control-plane-serverless.yaml'
    strategy:
      matrix:
        client-version: ['dev', '3.0.2']
    secrets:
      PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
    with:
      PINECONE_CONTROLLER_HOST: 'https://api.pinecone.io'
      additional-headers-json: '{}'
      cloud: 'aws'
      region: 'us-west-2'
      client-version: ${{ matrix.client-version}}
  dependency-tests:
    uses: './.github/workflows/testing-dependency.yaml'
    secrets: inherit

  pypi:
    uses: './.github/workflows/publish-to-pypi.yaml'
    needs: 
      - unit-tests
      - integration-tests-data
      - integration-tests-pod
      - integration-tests-serverless
      - dependency-tests
    with:
      isPrerelease: false
      ref: ${{ inputs.ref }}
      releaseLevel: ${{ inputs.releaseLevel }}
      TWINE_REPOSITORY: 'pypi'
      prereleaseSuffix: ''
    secrets:
      PYPI_USERNAME: __token__
      PYPI_PASSWORD: ${{ secrets.PROD_PYPI_PUBLISH_TOKEN }}
